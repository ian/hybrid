name: Test Core Package

on:
  push:
    branches: [main]
    paths:
      - 'packages/core/**'
      - 'packages/utils/**'
      - 'packages/xmtp/**'
      - 'packages/ponder/**'
      - '.github/workflows/test-core.yml'
  pull_request:
    branches: [main]
    paths:
      - 'packages/core/**'
      - 'packages/utils/**'
      - 'packages/xmtp/**'
      - 'packages/ponder/**'
      - '.github/workflows/test-core.yml'

jobs:
  test-core:
    name: Test Core Package
    runs-on: ubuntu-latest
    timeout-minutes: 10

    strategy:
      matrix:
        node-version: [22]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9.15.5

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build dependencies
        run: pnpm build

      - name: Type check core package
        run: |
          cd packages/core
          pnpm typecheck

      - name: Run core package tests
        run: |
          cd packages/core
          pnpm test:run

      - name: Verify Agent can use xmtpTools (type check)
        run: |
          cd packages/core
          cat > type-check-test.ts << 'EOF'
          import { Agent, xmtpTools } from "./src/index"
          import type { LanguageModel } from "ai"
          
          // This should compile without type errors after our fix
          const mockModel: LanguageModel = {} as LanguageModel
          
          const agent = new Agent({
            name: "CI Test Agent",
            model: mockModel,
            tools: xmtpTools, // This was causing the original type error
            instructions: "Test agent for CI"
          })
          
          console.log("✅ Type check passed - Agent accepts xmtpTools")
          EOF
          
          npx tsc --noEmit type-check-test.ts --skipLibCheck
          echo "✅ TypeScript compilation successful - type fix verified"
          rm type-check-test.ts

  test-compatibility:
    name: Test Tool Schema Compatibility
    runs-on: ubuntu-latest
    timeout-minutes: 5
    needs: test-core

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9.15.5

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build packages
        run: pnpm build

      - name: Test ZodEffects compatibility
        run: |
          cd packages/core
          cat > compatibility-test.ts << 'EOF'
          import { xmtpTools } from "./src/index"
          import { z } from "zod"
          
          // Test that sendMessage tool (which uses ZodEffects) is properly typed
          const sendMessageTool = xmtpTools.sendMessage
          
          // This should work - valid input with recipientAddress
          const validInput1 = {
            content: "Hello world",
            recipientAddress: "0x1234567890123456789012345678901234567890"
          }
          
          try {
            const parsed1 = sendMessageTool.inputSchema.parse(validInput1)
            console.log("✅ ZodEffects validation works for recipientAddress")
          } catch (error) {
            console.error("❌ ZodEffects validation failed:", error)
            process.exit(1)
          }
          
          // This should work - valid input with conversationId
          const validInput2 = {
            content: "Hello world", 
            conversationId: "test-conversation"
          }
          
          try {
            const parsed2 = sendMessageTool.inputSchema.parse(validInput2)
            console.log("✅ ZodEffects validation works for conversationId")
          } catch (error) {
            console.error("❌ ZodEffects validation failed:", error)
            process.exit(1)
          }
          
          // This should fail - missing both required fields
          const invalidInput = {
            content: "Hello world"
          }
          
          try {
            sendMessageTool.inputSchema.parse(invalidInput)
            console.error("❌ ZodEffects should have rejected invalid input")
            process.exit(1)
          } catch (error) {
            console.log("✅ ZodEffects correctly rejected invalid input")
          }
          
          console.log("✅ All ZodEffects compatibility tests passed")
          EOF
          
          npx tsx compatibility-test.ts
          rm compatibility-test.ts

  lint-and-format:
    name: Lint and Format Check
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9.15.5

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Lint core package
        run: |
          cd packages/core
          pnpm lint

      - name: Check formatting
        run: |
          cd packages/core
          pnpm format --check || {
            echo "❌ Code formatting issues found. Run 'pnpm format' to fix."
            exit 1
          }
